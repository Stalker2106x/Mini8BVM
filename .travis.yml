language: cpp
dist: trusty
sudo: false

os: linux

matrix:
  include:
      # g++ 6 on Linux with C++14
    - env: COMPILER=g++-6 BUILD=Debug STANDARD=14
      compiler: gcc
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
    - env: COMPILER=g++-6 BUILD=Release STANDARD=14
      compiler: gcc
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      # g++ 6 on Linux with C++14 (TEST COVERAGE)
    - env: COMPILER=g++-6 BUILD=Coverage STANDARD=14
      compiler: gcc
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - cmake
            - lcov
      before_install:
        - gem install coveralls-lcov
      coverity_scan:
        project:
          name: "Stalker2106x/Mini8BVM"
          description: "Mini 8Bit SAP-1 Microcomputer VM"
        notification_email: contact@maximemartens.fr
        build_command_prepend: "before_script"
        build_command: "script"
        branch_pattern: coverity_scan
      after_success:
        #- cd ../bin/
        #- ./Mini8BVM_test
        #- lcov --directory ../ --capture --output-file coverage.info
        # filter out system and extra files.
        #- lcov --remove coverage.info '/thirdparty/*' '/test/*' '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
        # output coverage data for debugging (optional)
        #- lcov --list coverage.info
        #- coveralls-lcov coverage.info
      # Apple clang on OS X with C++14
    - env: BUILD=Debug STANDARD=14
      compiler: clang
      os: osx
    - env: BUILD=Release STANDARD=14
      compiler: clang
      os: osx
      # clang 6.0 on Linux with C++14
    - env: COMPILER=clang++-6.0 BUILD=Debug STANDARD=14
      compiler: clang
      addons:
        apt:
          update: true
          packages:
            - clang-6.0
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty
            - llvm-toolchain-trusty-6.0

before_install:
  - sudo apt-get -y install libxi-dev

before_script:
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then export CXX=${COMPILER}; fi
  - if [[ "${BUILD}" != "Doc" ]]; then ${CXX} --version; fi
  # Build freeglut
  - mkdir -p thirdparty/freeglut/build
  - cd thirdparty/freeglut/build
  - cmake .. -DCMAKE_BUILD_TYPE=${BUILD}
  - make
  - cd -
  # Build makefile
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=${BUILD}

script:
  - make
